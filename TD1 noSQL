-- 1. Display the shelf names.
SELECT nom_rayon 
FROM rayon;
-- 2. Display the names and surfaces of the shelves.
SELECT nom_rayon, surface_rayon 
FROM rayon;
-- 3. Display all properties (characteristics) of products.
SELECT * 
FROM produit;
-- 4. Display the types of shelf positions.
SELECT emplacement_rayon 
FROM produit;
-- 5. Display, without duplicate, the different types of shelf positions.
SELECT DISTINCT emplacement_rayon 
FROM produit;
-- 6. Display the label, the current price and the current price minus 0.50€ of the products.
SELECT libelle_produit, prix_courant, prix_courant - 0.5 as new_price 
FROM produit;
-- 7. Display the label and stock value of each product. (Stock value = qtestk*current price)
SELECT libelle_produit, qtestk * prix_courant as Stock_value 
FROM produit;

-- 8. Display the name and surface of shelf #8.
SELECT nom_rayon, surface_rayon
FROM rayon
WHERE no_rayon = 8;
-- 9. Display the label, the current price and the shelf locations of products in shelf #5.
SELECT libelle_produit, prix_courant, emplacement_rayon
FROM produit
WHERE no_rayon = 5;
-- 10. Display the numbers and labels of the products whose current price is more than 15€.
SELECT no_produit, libelle_produit
FROM produit
WHERE prix_courant > 15;
-- 11. Display the list of products with a quantity in stock between 20 and 30.
SELECT *
FROM produit
WHERE qtestk BETWEEN 20 AND 30;
-- 12. Display the product numbers for which sales in May 2014 are greater than 2500€.
SELECT no_produit
FROM ventes_mensuelles
WHERE année = 2014 AND mois = 5 AND montant_vente > 2500;
-- 13. Display the list of products in shelves #4 and #6.
SELECT * 
FROM produit
WHERE no_rayon = 4 or no_rayon = 6;
-- 14. List the products of shelves #4 and #6, the current price of which is less than 2.50€.
SELECT *
FROM produit
WHERE prix_courant < 2.5 AND (no_rayon = 4 or no_rayon = 6);
-- 15. Display the label and stock value of products on shelf #4, location TOP.
SELECT libelle_produit, prix_courant * qtestk as stock_value 
FROM produit
WHERE no_rayon = 4 AND emplacement_rayon = "HAUT";
-- 16. Display the label, the shelf number and the current price of the products for which the quantity in stock is greater than 30 and less or equal to 50 and for which the shelf location is LOW.
SELECT libelle_produit, no_rayon, prix_courant
FROM produit
WHERE (qtestk > 30 and qtestk <= 50) OR emplacement_rayon = "BAS";
-- 17. Display the label, the current price, the quantity in stock of the products on the shelf #1 with TOP position and on the shelf #2 with LOW as position on shelf.
SELECT libelle_produit, prix_courant, qtestk
FROM produit
WHERE (no_rayon = 1 AND emplacement_rayon = "HAUT") OR (no_rayon = 2 AND emplacement_rayon = "BAS");
-- 18. Display the label and the stock value of products on shelf #5 for which the stock value is more than 800€.
SELECT libelle_produit, prix_courant * qtestk as stock_value 
FROM produit
WHERE no_rayon = 5 AND (prix_courant * qtestk) > 800;
-- 19. Display the list of products on shelves #1, #3, #4 and #6.
SELECT * 
FROM produit
WHERE no_rayon IN (1, 3, 4, 6);
-- 20. Display the list of products for which the label begins with Y.
SELECT *
FROM produit
WHERE emplacement_rayon LIKE "Y%";
-- 21. Display the list of products for which no stock is kept.
SELECT *
FROM produit
WHERE qtestk IS NULL

-- C. ORDER BY queries
-- 22. Display the list of product labels in alphabetical order.
SELECT libelle_produit
FROM produit
ORDER BY libelle_produit;
-- 23. Display the list of products sorted by current prices in descending order
SELECT *
FROM produit
ORDER BY prix_courant DESC;
-- 24. Display the list of products sorted by the shelf number in ascending order and by stock quantity in descending order.
SELECT *
FROM produit
ORDER by no_rayon ASC, qtestk DESC;

-- D. Multi-Table queries
-- 25. Display the shelf name for the product that has the “YAOURT” label.
SELECT nom_rayon
FROM rayon, produit
where rayon.no_rayon = produit.no_rayon AND libelle_produit LIKE "%YAOURT%";
-- 26. Display the label and the current price of the products that have the responsible #2.
SELECT libelle_produit, prix_courant
FROM produit, rayon
WHERE produit.no_rayon = rayon.no_rayon AND no_resp = 2;
-- 27. Display the product labels for which the sales amount for the month of June 2014 is lower than 2000€.
SELECT libelle_produit
FROM produit, ventes_mensuelles
WHERE produit.no_produit = ventes_mensuelles.no_produit AND mois = 6 and année = 2014 AND montant_vente < 2000;
-- 28. Display the labels of products that have been on a sale of 10%.
SELECT libelle_produit
FROM produit, promotion_produit
WHERE produit.no_produit = promotion_produit.no_produit AND reduction = 0.1;
-- 29. Display the labels of products that have one or more substitute products.
SELECT libelle_produit
FROM produit_substitution, produit
WHERE produit_substitution.no_produit = produit.no_produit;
-- 30. Display the product number for which the sales amount for May 2014 is of 3000€.
SELECT produit.no_produit
FROM produit, ventes_mensuelles
WHERE produit.no_produit = ventes_mensuelles.no_produit AND mois = 5 and année = 2014 and montant_vente = 3000;
-- 31. For products that have at least one substitute product, display the label of the product and those of the substitutes.
SELECT libelle_produit, no_produit_remplacement
FROM produit_substitution, produit
WHERE produit_substitution.no_produit = produit.no_produit;

-- E. Queries with Numeric Expressions and Functions
-- 33. Display the label and the stock value of products, ordered by stock value in descending order.
SELECT libelle_produit, prix_courant * qtestk as Stock_value 
FROM produit
ORDER by prix_courant * qtestk DESC;
-- 34. Display for each product the label, the current price and the current price reduced by 10%.
SELECT no_produit, libelle_produit, prix_courant, prix_courant - prix_courant * 0.1 as new_price
FROM produit;
-- 35. Display the total shelf area of the supermarket.
SELECT SUM(surface_rayon)
FROM rayon;
-- 36. Display the number of products offered for sale.
SELECT COUNT(no_produit)
FROM produit;
-- 37. Display the total amount of sales for product #5.
SELECT SUM(montant_vente)
FROM ventes_mensuelles
WHERE no_produit = 5;
-- 38. Display the average price of products on shelf #2.
SELECT AVG(prix_courant)
FROM produit
WHERE no_rayon = 2;

-- F. Queries with GROUP BY clause
-- 39. Display the average of product prices by shelf.
SELECT no_produit, AVG(prix_courant)
FROM produit
ORDER by no_rayon;
-- 40. Display the number of promotions per product.
SELECT produit.no_produit, COUNT(date_debut_promotion)
FROM promotion_produit, produit
WHERE produit.no_produit = promotion_produit.no_produit
group BY no_produit;
-- 41. Display the product number for the products that have been in at least 3 promotional operations.
SELECT no_produit
FROM promotion_produit
GROUP by no_produit
HAVING COUNT(date_debut_promotion) >= 3;
-- 42. Display the product number for the products that have been in at least 3 promotions of more than 10%.
SELECT no_produit, reduction
FROM promotion_produit
WHERE reduction > 0.1
GROUP by no_produit
HAVING COUNT(date_debut_promotion) >= 3;
-- 43. Display the list of responsible IDs for the persons responsible of at least 2 shelves.
SELECT no_resp
FROM rayon
GROUP by no_resp
HAVING COUNT(no_rayon) >= 2;
-- 44. Display the amount of annual sales by product
SELECT no_produit, SUM(montant_vente)
FROM ventes_mensuelles
GROUP by année, no_produit;
-- 45. Display for each product its label and the total amount of sales.
SELECT produit.no_produit, libelle_produit, sum(montant_vente)
FROM produit, ventes_mensuelles
WHERE produit.no_produit = ventes_mensuelles.no_produit
GROUP by no_produit;

